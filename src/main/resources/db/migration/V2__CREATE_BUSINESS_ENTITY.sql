CREATE TABLE answer
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text        VARCHAR(255),
    correct     BOOLEAN,
    question_id BIGINT,
    CONSTRAINT pk_answer PRIMARY KEY (id)
);

CREATE TABLE base64images
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    base64image VARCHAR(255),
    CONSTRAINT pk_base64images PRIMARY KEY (id)
);

CREATE TABLE course
(
    id                BIGINT                      NOT NULL,
    created_by        VARCHAR(255)                NOT NULL,
    created_date      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    last_updated_by   VARCHAR(255)                NOT NULL,
    last_updated_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    title             VARCHAR(255),
    description       VARCHAR(255),
    base64images_id   BIGINT,
    CONSTRAINT pk_course PRIMARY KEY (id)
);

CREATE TABLE course_tags
(
    course_id BIGINT NOT NULL,
    tags_id   BIGINT NOT NULL
);

CREATE TABLE course_users
(
    course_id     BIGINT NOT NULL,
    users_user_id bigint   NOT NULL
);

CREATE TABLE lesson
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by        VARCHAR(255)                            NOT NULL,
    created_date      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    last_updated_by   VARCHAR(255)                            NOT NULL,
    last_updated_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    lesson_number     BIGINT,
    title             VARCHAR(255),
    video_url         VARCHAR(255),
    body_text         TEXT,
    status            VARCHAR(255),
    is_completed      BOOLEAN,
    course_id         BIGINT                                  NOT NULL,
    CONSTRAINT pk_lesson PRIMARY KEY (id),
    CONSTRAINT fk_lesson_course FOREIGN KEY (course_id) REFERENCES course (id) ON DELETE CASCADE
);
CREATE TABLE question
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    question_number BIGINT,
    text            VARCHAR(255),
    CONSTRAINT pk_question PRIMARY KEY (id)
);

CREATE TABLE question_answers
(
    question_id BIGINT NOT NULL,
    answers_id  BIGINT NOT NULL
);

CREATE TABLE tags
(
    id   BIGINT NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_tags PRIMARY KEY (id)
);

CREATE TABLE test
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by        VARCHAR(255)                            NOT NULL,
    created_date      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    last_updated_by   VARCHAR(255)                            NOT NULL,
    last_updated_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    title             VARCHAR(255),
    state             VARCHAR(255),
    type              VARCHAR(255),
    CONSTRAINT pk_test PRIMARY KEY (id)
);

CREATE TABLE test_questions
(
    test_id      BIGINT NOT NULL,
    questions_id BIGINT NOT NULL
);

ALTER TABLE course_tags
    ADD CONSTRAINT uc_course_tags_tags UNIQUE (tags_id);

ALTER TABLE course_users
    ADD CONSTRAINT uc_course_users_users_user UNIQUE (users_user_id);

ALTER TABLE question_answers
    ADD CONSTRAINT uc_question_answers_answers UNIQUE (answers_id);

ALTER TABLE test_questions
    ADD CONSTRAINT uc_test_questions_questions UNIQUE (questions_id);

ALTER TABLE answer
    ADD CONSTRAINT FK_ANSWER_ON_QUESTION FOREIGN KEY (question_id) REFERENCES question (id);

ALTER TABLE course
    ADD CONSTRAINT FK_COURSE_ON_BASE64IMAGES FOREIGN KEY (base64images_id) REFERENCES base64images (id);

ALTER TABLE course_tags
    ADD CONSTRAINT fk_coutag_on_course FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE course_tags
    ADD CONSTRAINT fk_coutag_on_tags FOREIGN KEY (tags_id) REFERENCES tags (id);

ALTER TABLE course_users
    ADD CONSTRAINT fk_couuse_on_course FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE course_users
    ADD CONSTRAINT fk_couuse_on_user_entity FOREIGN KEY (users_user_id) REFERENCES users (id);

ALTER TABLE question_answers
    ADD CONSTRAINT fk_queans_on_answer FOREIGN KEY (answers_id) REFERENCES answer (id);

ALTER TABLE question_answers
    ADD CONSTRAINT fk_queans_on_question FOREIGN KEY (question_id) REFERENCES question (id);

ALTER TABLE test_questions
    ADD CONSTRAINT fk_tesque_on_question FOREIGN KEY (questions_id) REFERENCES question (id);

ALTER TABLE test_questions
    ADD CONSTRAINT fk_tesque_on_test FOREIGN KEY (test_id) REFERENCES test (id);

